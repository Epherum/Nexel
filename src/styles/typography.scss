//src/styles/typography.scss
@use "sass:math";
@use "variables" as *;

// --- Helper Function: Convert px to rem ---
@function to-rem($px-value) {
  @return math.div($px-value, $base-font-size-px) * 1rem;
}

// --- Core Function: The Fluid Font Size Generator ---
@function get-fluid-font-size($font-size-map) {
  $min-size: map-get($font-size-map, "min");
  $max-size: map-get($font-size-map, "max");

  @if $min-size == $max-size {
    @return $min-size;
  }

  $min-vw: to-rem(map-get($breakpoints, "md"));
  $max-vw: to-rem(map-get($breakpoints, "xl"));

  $slope: math.div($max-size - $min-size, $max-vw - $min-vw);
  $y-intercept: $min-size - $slope * $min-vw;

  $preferred-value: calc(#{$y-intercept} + #{$slope * 100}vw);

  @return clamp(#{$min-size}, #{$preferred-value}, #{$max-size});
}

// --- Mixin: Easy-to-use text style applicator ---
@mixin text-style($scale-key) {
  // Error checking
  @if not map-has-key($mobile-type-scale, $scale-key) {
    @error "The key '#{$scale-key}' was not found in the $mobile-type-scale map.";
  }
  @if not map-has-key($type-scale, $scale-key) {
    @error "The key '#{$scale-key}' was not found in the $type-scale map.";
  }

  // --- Mobile First ---
  // Apply the fixed font size from our new mobile map by default.
  font-size: map-get($mobile-type-scale, $scale-key);

  // --- Tablet/Desktop and up ---
  // At the 'md' breakpoint, switch to the fluid typography system.
  @media (min-width: map-get($breakpoints, "md")) {
    $font-size-map: map-get($type-scale, $scale-key);
    font-size: get-fluid-font-size($font-size-map);
  }
}
