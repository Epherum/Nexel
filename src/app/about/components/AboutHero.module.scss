// Import our system files
@use "variables" as *;
@use "typography" as t;

/* NEW: The tall wrapper that enables the sticky scroll effect */
.scrollWrapper {
  // Adjust height to control animation "speed". 300vh = 3 screens of scrolling.
  height: 300vh;
  position: relative;
}

/* MODIFIED: Your .heroSection is now the sticky element */
.heroSection {
  height: 110vh; // Use height instead of min-height for sticky to work correctly
  background-color: $dark-bg;
  color: $primary-text;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  position: sticky; /* <-- The magic! */
  top: 0; /* <-- Stick to the top */
  overflow: hidden; /* <-- Important for preventing elements from showing outside bounds */

  // Make padding responsive
  padding: 10rem 2rem 6rem 2rem;
  @media (min-width: map-get($breakpoints, "md")) {
    padding: 10rem 4rem 8rem 4rem;
  }
}

.contentWrapper {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 3rem;
  text-align: center;
  position: relative;
  /* CRITICAL FIX: Make sure text is on top of the cards */
  z-index: 10;
}

.headline {
  font-weight: 300;
  line-height: 1;

  @include t.text-style("6xl");
}

.descriptionBox {
  max-width: 550px;
  margin: 0 auto;
  text-align: center;

  p {
    margin-top: -1rem;
    margin-bottom: 1rem;
    font-weight: 100;
    @include t.text-style("lg");
  }
}

.exploreButton {
  background-color: $accent-color;
  color: #000;
  border: none;
  padding: 0.6rem 1.3rem;
  border-radius: 8px;
  font-weight: 500;
  cursor: pointer;
  transition: transform 0.2s ease-in-out;
  font-family: inherit;
  @include t.text-style("xs");

  &:hover {
    transform: scale(1.05);
  }
}

.scrollIndicator {
  /* This can be removed or kept, but it's no longer functionally necessary */
  display: none; // Hiding for now as the scroll animation is the indicator
}

.bottomBar {
  position: absolute;
  bottom: 0rem;
  left: 0;
  width: 100%; // Changed to 100% to fill the sticky container
  padding: 1rem 4rem;
  display: flex;
  justify-content: space-between;
  align-items: center;
  color: $secondary-text;
  @include t.text-style("xs");
  z-index: 10; /* CRITICAL FIX: Ensure it's also above cards */

  .tagline {
    color: $primary-text;
  }

  @media (max-width: map-get($breakpoints, "md")) {
    flex-direction: column;
    gap: 0.5rem;
    align-items: flex-start;
  }
}

.cardsContainer {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  // Cards should be behind the text content.
  // z-index: 4 was fine, but let's lower it to be safe.
  z-index: 5;
  pointer-events: none;
}

.card {
  position: absolute;
  padding: 1.2vmin;
  background-color: $primary-text;
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.25);
  border-radius: 8px;

  &.lime {
    background-color: $accent-color;
  }
}

.imageContainer {
  position: relative;
  width: 100%;
  height: 100%;
  overflow: hidden;
  border-radius: 4px;
}
