/* src/components/Hero/Hero.module.css */

.hero {
  display: flex;
  flex-direction: column;
  justify-content: center;
  gap: 2rem;
  min-height: calc(100vh - var(--nav-height));
  padding: 4rem 0; /* Vertical padding only, marquee will be full-width */
  background-color: var(--dark-bg);
  width: 100%;
  overflow: hidden; /* Important for containing the hero section */
}

.headlineContainer {
  width: 100%;
  padding: 0 0.5rem; /* Add horizontal padding here instead */
}

.headline {
  font-size: var(--font-size-2xl);
  font-weight: 300;
  letter-spacing: -1.5px;
  line-height: 1.2;
  padding-right: 0.2rem;
  color: var(--primary-text);
  padding-top: 3.5rem;

  margin: 0;
  text-align: left;
  text-wrap: balance; /* Improves text wrapping for multi-line headlines */
  text-wrap: balance;
}

/* Make sure all direct children of the h1 line up properly */
.headline > * {
  display: inline-block;
  vertical-align: top;
  margin: 0 0.15em;
  overflow: hidden;
}

/* Remove the margin from our new container */
.scrambleContainer {
  margin: 0 0.15em;
}

/* --- THE ELEGANT SCRAMBLE FIX --- */

.scrambleContainer {
  position: relative; /* This is the positioning context */
  display: inline-block; /* Allows it to sit in the line of text */
  vertical-align: top; /* Aligns with the other words */
}

.scrambleAbsolute {
  position: absolute; /* Takes the element out of the layout flow */
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
}

/* This is the key: an invisible placeholder that sets the width */
.scramblePlaceholder {
  visibility: hidden; /* It takes up space but isn't visible */
  /* Ensure it uses the same font styles to have the correct width */
  font-weight: 300; /* Match your h1 font-weight */
}

/* --- THE RELIABLE LINE BREAK FIX --- */
.desktopOnlyBreak {
  display: none; /* Hidden on mobile */
}

/* --- MOBILE MARQUEE STYLES --- */
.mobileMarquee {
  width: 100%;
  overflow: hidden;
  mask-image: linear-gradient(
    to right,
    transparent,
    black 10%,
    black 90%,
    transparent
  );
}

.marqueeTrack {
  display: flex;
  flex-wrap: nowrap;
  gap: 1rem;
  width: max-content; /* Allows the track to be as wide as its content */
}

.marqueeImageContainer {
  position: relative;
  height: 120px;
  aspect-ratio: 4 / 3;
  border-radius: 10px;
  overflow: hidden;
  flex-shrink: 0; /* Prevents images from squishing */
}

/* --- SHARED IMAGE STYLES --- */
.imageWrapper {
  width: 100%;
  height: 100%;
  position: relative;
}

.gridImage {
  object-fit: cover;
  width: 100%;
  height: 100%;
}

/* --- DESKTOP OVERRIDES --- */
@media (min-width: 768px) {
  .hero {
    gap: 5rem;
    padding: 7rem 2rem 0rem; /* Restore horizontal padding */
  }

  .headlineContainer {
    padding: 0; /* Remove padding as parent has it now */
  }
  .headline {
    font-size: var(--font-size-3xl);
    line-height: 1.2;
    letter-spacing: 1px;
  }

  /*
    FIX 2: Force the line break on desktop.
    Instead of relying on the <br> tag, we make its container a block-level element.
    This creates a hard line break that `text-wrap: nowrap` cannot ignore.
    We give it `content: ''` to ensure it renders consistently across browsers.
  */
  .desktopOnlyBreak {
    display: block;
    content: ""; /* Necessary for block display to take effect reliably */
    height: 0; /* Ensures it adds no extra vertical space */
    margin: 0;
  }

  .scrambleWrapper {
    min-width: auto;
  }

  /* --- (Existing desktop styles are unchanged) --- */
  .mobileMarquee {
    display: none;
  }
  .desktopGrid {
    display: grid;
    padding: 0 0rem; /* Match hero padding */
    width: 100%;
    /* Create a 24-column grid for our 2:3 ratio */
    grid-template-columns: repeat(24, 1fr);
    gap: 0.25rem;
    /* THIS IS THE KEY: Set a fixed height for the entire grid */
    height: 6rem;
  }

  .imageContainer {
    position: relative;
    height: 100%; /* Make each container fill the parent's fixed height */
    aspect-ratio: auto; /* Unset aspect ratio to allow stretching */
    border-radius: 16px;
    overflow: hidden;
  }

  .smallImage {
    grid-column: span 2;
  }

  .largeImage {
    grid-column: span 4;
  }
}
